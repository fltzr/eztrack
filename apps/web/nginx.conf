# events {
#     worker_connections 1024;
# }

# http {
#     include /etc/nginx/mime.types;
    
#     server {
#         listen 80;
#         server_name localhost;

#         # Root directory where the React app build is located
#         root /usr/share/nginx/html/apps/web;
#         index index.html;

#         # Serve static files directly
#         location / {
#             try_files $uri /index.html;
#         }

#         # Error pages
#         error_page 404 /404.html;
#         error_page 500 502 503 504 /50x.html;

#         # Gzip Compression
#         gzip on;
#         gzip_disable "msie6";

#         gzip_vary on;
#         gzip_proxied any;
#         gzip_comp_level 6;
#         gzip_buffers 16 8k;
#         gzip_http_version 1.1;
#         gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

#         # Logging
#         access_log /var/log/nginx/web.access.log;
#         error_log /var/log/nginx/web.error.log;
# }

# }

worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    include mime.types;
    default_type application/octet-stream;

    server_tokens off;
    
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options SAMEORIGIN;
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

    log_format quic '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" $http_user_agent" "$http3"';

    # Compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;

    # SSL 
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # Upgrade to https://
    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        http2 on;
        server_name localhost;

        ssl_certificate /etc/ssl/certs/localhost+2.pem;
        ssl_certificate_key /etc/ssl/certs/private/localhost+2-key.pem;
        
        location / {
            limit_req zone=mylimit burst=20 nodelay;
            root /usr/share/nginx/html/apps/web;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
    }
}